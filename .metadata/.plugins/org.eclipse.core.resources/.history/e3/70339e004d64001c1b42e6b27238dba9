package application;



import java.io.IOException;
import java.net.URL;
import java.sql.*;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.layout.AnchorPane;
import javafx.scene.control.Alert.AlertType;
import javafx.stage.Stage;
import javafx.scene.control.Button;
import javafx.scene.control.Label;

public class GirisEkraniKontrol implements Initializable{
	
	@FXML
    private AnchorPane anchorPane;

	@FXML
    private Button btnGiris;	

	@FXML
	private Button btnKayit;
	
	@FXML
    private Label lblHata;

	
	
    @FXML
    private PasswordField pfSifre;

    @FXML
    private TextField tfKA;
    
   
    
    private Connection baglanti;
    private PreparedStatement sorgu;
    private Alert alert;
    private ResultSet sonuç;
    
    @FXML
    public void kayitOl(ActionEvent event) throws IOException {
		
		FXMLLoader loader=new FXMLLoader(getClass().getResource("KayitOl.fxml"));
		
		Parent root=loader.load();
		
		KayitOlKontrol kok = loader.getController();		
		
		Stage stage=new Stage();
		
		stage.setScene(new Scene(root));
		
		
		
		stage.show();
		
	}
    
    @FXML
    private void giris_yap(ActionEvent event) throws IOException{
    	if(tfKA.getText().equals(KA()) && pfSifre.getText().equals(SIFRE())) {
    		
    		Stage stage = (Stage)anchorPane.getScene().getWindow();
    		stage.close();
    		Parent root = FXMLLoader.load(getClass().getResource("AnaSayfa.fxml"));
    		Scene scene = new Scene(root);
    		stage.setScene(scene);
    		stage.show();
    		
    		
    	}
    
    	
    	else {
    		alert = new Alert(AlertType.ERROR);
			alert.setTitle("Hata");
			alert.setHeaderText("Giriþ yapýlamadý.");
			alert.show();

    	}
    }	
    	 private String KA() {
    	    	String Kullanici_adi = " ";
    	    	
    	    	try {
    				sorgu = baglanti.prepareStatement("Select kullanici_adi from Kullanicilar where kullanici_adi = ?_");
    				sorgu.setString(1, tfKA.getText());
    		    	sonuç = sorgu.executeQuery();
    		    	
    		    	if(sonuç.next()) {
    		    		Kullanici_adi = sonuç.getString(1);
    		    		sonuç.close();
    		    		
    		    	}
    		    	
    		    	
    			} catch (SQLException ex) {
    				
    				Logger.getLogger(GirisEkraniKontrol.class.getName()).log(Level.SEVERE,null,ex);
    				
    			}
    	    	return Kullanici_adi;
    	    	
    	    }
    	    
    	    private String SIFRE() {
    	    	String Sifre = " ";
    	    	
    	    	try {
    				sorgu = baglanti.prepareStatement("Select sifre from Kullanicilar where sifre = ?");
    				sorgu.setString(2, pfSifre.getText());
    		    	sonuç = sorgu.executeQuery();
    		    	
    		    	if(sonuç.next()) {
    		    		Sifre = sonuç.getString(2);
    		    		sonuç.close();
    		    		
    		    	}
    		    	
    		    	
    			} catch (SQLException ex) {
    				Logger.getLogger(GirisEkraniKontrol.class.getName()).log(Level.SEVERE,null,ex);
    				
    			}
    	    	return Sifre;
    	
    }
   
    
    


		



	@Override
	public void initialize(URL location, ResourceBundle resources) {
		try {
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			baglanti = DriverManager.getConnection("jdbc:sqlserver://DESKTOP-MKU963U\\SQLEXPRESS;database=kutuphane;integratedSecurity=true");
			
			
		} 
		
		catch (Exception e) {
			alert = new Alert(AlertType.ERROR);
			alert.setTitle("Hata");
			alert.setHeaderText("Veritabanýna baðlanýrken bir hata oluþtu...");
			alert.show();

			
		}
		
	}


}
	


			
			
    
    



